{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"checked\"];\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", null, \"Привіт, \" + _toDisplayString($props.user.name) + \"! Ось твій список справ ✨\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('logout'))\n  }, \"Вийти\"), _cache[3] || (_cache[3] = _createElementVNode(\"div\", null, [_createElementVNode(\"label\", {\n    for: \"search\"\n  }, \"Знайти задачу...\"), _createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"search\"\n  })], -1 /* HOISTED */)), $data.tasks.length > 0 ? (_openBlock(), _createElementBlock(\"section\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: task.id\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(task.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(task.description), 1 /* TEXT */), _createElementVNode(\"input\", {\n      type: \"checkbox\",\n      checked: task.completed\n    }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"p\", null, \"Дата виконання: \" + _toDisplayString(task.date), 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"button\", null, \"Видалити\", -1 /* HOISTED */)), _cache[2] || (_cache[2] = _createElementVNode(\"button\", null, \"Редагувати\", -1 /* HOISTED */))]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"У вас ще немає задач. Додайте першу!\"))]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$props","user","name","onClick","_cache","$event","_ctx","$emit","for","type","id","$data","tasks","length","_hoisted_1","_Fragment","_renderList","task","key","title","description","checked","completed","date","_hoisted_3"],"sources":["/home/homesasha/Python_Fullstack/SashaTodoList/public/src/components/TaskComponent.vue"],"sourcesContent":["<template>\n    <div>\n        <p>Привіт, {{ user.name }}! Ось твій список справ ✨</p>\n        <button @click=\"$emit('logout')\">Вийти</button>\n        <div>\n            <label for=\"search\">Знайти задачу...</label>\n            <input type=\"text\" id=\"search\" />\n        </div>\n        <section v-if=\"tasks.length > 0\">\n            <div v-for=\"task in tasks\" :key=\"task.id\">\n                <h3>{{ task.title }}</h3>\n                <p>{{ task.description }}</p>\n                <input type=\"checkbox\" :checked=\"task.completed\" />\n                <p>Дата виконання: {{ task.date }}</p>\n                <button>Видалити</button>\n                <button>Редагувати</button>\n            </div>\n        </section>\n        <p v-else>У вас ще немає задач. Додайте першу!</p>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    name: 'TaskComponent',\n    props: {\n        user: Object\n    },\n    data() {\n        return {\n            tasks: [],\n            error: ''\n        }\n    },\n    methods: {\n        async fetchTasks() {\n            this.error = '';\n            try {\n                const response = await axios.get(`http://127.0.0.1:8000/tasks/${this.user.id}`);\n                this.tasks = response.data;\n            } catch (err) {\n                if (err.request) {\n                    this.error = 'Не вдалося підключитися до сервера. Перевірте ваше інтернет-з\\'єднання.';\n                } else {\n                    this.error = 'Сталася помилка під час відправки запиту.';\n                }\n            }\n        }\n    },\n    watch: {\n        user: {\n            handler(newUser) {\n                if (newUser && newUser.id) {\n                    this.fetchTasks();\n                } else {\n                    this.tasks = [];\n                    this.error = '';\n                }\n            },\n            immediate: true\n        }\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":";;;;;;;;;uBACIA,mBAAA,CAkBM,cAjBFC,mBAAA,CAAuD,WAApD,UAAQ,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,IAAI,CAACC,IAAI,IAAG,2BAAyB,iBACnDJ,mBAAA,CAA+C;IAAtCK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;KAAY,OAAK,G,0BACtCT,mBAAA,CAGM,cAFFA,mBAAA,CAA4C;IAArCU,GAAG,EAAC;EAAQ,GAAC,kBAAgB,GACpCV,mBAAA,CAAiC;IAA1BW,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC;2BAEXC,KAAA,CAAAC,KAAK,CAACC,MAAM,Q,cAA3BhB,mBAAA,CASU,WAAAiB,UAAA,I,kBARNjB,mBAAA,CAOMkB,SAAA,QAAAC,WAAA,CAPcL,KAAA,CAAAC,KAAK,EAAbK,IAAI;yBAAhBpB,mBAAA,CAOM;MAPsBqB,GAAG,EAAED,IAAI,CAACP;QAClCZ,mBAAA,CAAyB,YAAAC,gBAAA,CAAlBkB,IAAI,CAACE,KAAK,kBACjBrB,mBAAA,CAA6B,WAAAC,gBAAA,CAAvBkB,IAAI,CAACG,WAAW,kBACtBtB,mBAAA,CAAmD;MAA5CW,IAAI,EAAC,UAAU;MAAEY,OAAO,EAAEJ,IAAI,CAACK;yCACtCxB,mBAAA,CAAsC,WAAnC,kBAAgB,GAAAC,gBAAA,CAAGkB,IAAI,CAACM,IAAI,kB,0BAC/BzB,mBAAA,CAAyB,gBAAjB,UAAQ,sB,0BAChBA,mBAAA,CAA2B,gBAAnB,YAAU,qB;qDAG1BD,mBAAA,CAAkD,KAAA2B,UAAA,EAAxC,sCAAoC,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}