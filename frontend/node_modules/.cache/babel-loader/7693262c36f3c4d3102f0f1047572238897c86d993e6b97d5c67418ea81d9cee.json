{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task-component-operation\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_3 = [\"min\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.error !== '' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($data.error), 1)) : _createCommentVNode(\"\", true), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('editbutton', 0)),\n    class: \"close-button\"\n  }, \"Закрити\"), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.editTask && $options.editTask(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"title\"\n  }, \"Назва завдання\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    maxlength: \"256\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.title = $event),\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.title]])]), _createElementVNode(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"description\"\n  }, \"Опис завдання\", -1)), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"description\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.description = $event),\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.description]])]), _createElementVNode(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"date\"\n  }, \"Дата виконання\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"date\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.date = $event),\n    min: _ctx.todayDate,\n    required: \"\"\n  }, null, 8, _hoisted_3), [[_vModelText, $data.date]])]), _cache[8] || (_cache[8] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Зберегти зміни\", -1))], 32)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","$data","error","_hoisted_2","_toDisplayString","_createElementVNode","onClick","_cache","$event","_ctx","$emit","onSubmit","_withModifiers","args","$options","editTask","for","type","id","maxlength","title","required","description","date","min","todayDate"],"sources":["/home/homesasha/Python_Fullstack/MyToDoList/fronted/src/components/EditTask.vue"],"sourcesContent":["<template>\n    <div class=\"task-component-operation\">\n        <p v-if=\"error !== ''\" class=\"error\">{{error}}</p>\n        <button @click=\"$emit('editbutton', 0)\" class=\"close-button\">Закрити</button>\n        <form @submit.prevent=\"editTask\">\n            <div>\n                <label for=\"title\">Назва завдання</label>\n                <input type=\"text\" id=\"title\" maxlength=\"256\" v-model=\"title\" required />\n            </div>\n            <div>\n                <label for=\"description\">Опис завдання</label>\n                <textarea id=\"description\" v-model=\"description\" required></textarea>\n            </div>\n            <div>\n                <label for=\"date\">Дата виконання</label>\n                <input type=\"date\" id=\"date\" v-model=\"date\" :min=\"todayDate\" required/>\n            </div>\n            <button type=\"submit\">Зберегти зміни</button>\n        </form>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    name: 'EditTask',\n    props: {\n        task: Object\n    },\n    data() {\n        return {\n            title: this.task.title || '',\n            description: this.task.description || '',\n            completed: this.task.completed,\n            date: this.task.date || '',\n            error: ''\n        };\n    },\n    methods: {\n        async editTask() {\n            try {\n                this.error = '';\n                if (this.title === '' || this.description === '' || this.date === '') {\n                    this.error = 'Будь ласка, заповніть всі поля.';\n                    return;\n                }\n                await axios.put(`https://mytodolist-pcw4.onrender.com/tasks/${this.task.id}/`, {\n                    title: this.title,\n                    description: this.description,\n                    completed: this.completed,\n                    date: this.date,\n                    user_id: this.task.user_id \n                });\n                this.$emit('fetchTasks');\n                this.$emit('editbutton', 0); \n            } catch (err) {\n                if (err.response) {\n                    if (err.response.status === 400 && err.response.data && err.response.data.detail === \"Incorrect username\") {\n                        this.error = 'Користувача з таким email не знайдено';\n                    } else {\n                        this.error = `Помилка: ${err.response.data.detail || 'Не вдалося увійти. Спробуйте пізніше.'}`;\n                    }\n                } else if (err.request) {\n                    this.error = 'Не вдалося підключитися до сервера. Перевірте ваше інтернет-з\\'єднання.';\n                } else {\n                    this.error = 'Сталася помилка під час відправки запиту.';\n                }\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n\nform > div {\n    display: flex;\n    align-items: center; \n    margin-bottom: 15px; \n    text-align: left;\n}\n\nlabel{\n    margin-bottom: 0;\n    margin-right: 10px;\n    min-width: 120px; \n}\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAA0B;;;EACVA,KAAK,EAAC;;;;uBADjCC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBOC,KAAA,CAAAC,KAAK,W,cAAdH,mBAAA,CAAkD,KAAlDI,UAAkD,EAAAC,gBAAA,CAAXH,KAAA,CAAAC,KAAK,S,+BAC5CG,mBAAA,CAA6E;IAApEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;IAAmBZ,KAAK,EAAC;KAAe,SAAO,GACpEO,mBAAA,CAcO;IAdAM,QAAM,EAAAJ,MAAA,QAAAA,MAAA,MAAAK,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;MAC3BR,mBAAA,CAGM,c,0BAFFA,mBAAA,CAAyC;IAAlCW,GAAG,EAAC;EAAO,GAAC,gBAAc,Q,gBACjCX,mBAAA,CAAyE;IAAlEY,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;IAACC,SAAS,EAAC,KAAK;+DAAUlB,KAAA,CAAAmB,KAAK,GAAAZ,MAAA;IAAEa,QAAQ,EAAR;gCAAPpB,KAAA,CAAAmB,KAAK,E,KAEhEf,mBAAA,CAGM,c,0BAFFA,mBAAA,CAA8C;IAAvCW,GAAG,EAAC;EAAa,GAAC,eAAa,Q,gBACtCX,mBAAA,CAAqE;IAA3Da,EAAE,EAAC,aAAa;+DAAUjB,KAAA,CAAAqB,WAAW,GAAAd,MAAA;IAAEa,QAAQ,EAAR;gCAAbpB,KAAA,CAAAqB,WAAW,E,KAEnDjB,mBAAA,CAGM,c,0BAFFA,mBAAA,CAAwC;IAAjCW,GAAG,EAAC;EAAM,GAAC,gBAAc,Q,gBAChCX,mBAAA,CAAuE;IAAhEY,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,MAAM;+DAAUjB,KAAA,CAAAsB,IAAI,GAAAf,MAAA;IAAGgB,GAAG,EAAEf,IAAA,CAAAgB,SAAS;IAAEJ,QAAQ,EAAR;0CAAvBpB,KAAA,CAAAsB,IAAI,E,+BAE9ClB,mBAAA,CAA6C;IAArCY,IAAI,EAAC;EAAQ,GAAC,gBAAc,O","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}