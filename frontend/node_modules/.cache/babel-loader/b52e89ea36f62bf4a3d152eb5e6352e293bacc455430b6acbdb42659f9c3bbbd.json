{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task-component\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  key: 2\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"task\"\n};\nconst _hoisted_6 = [\"checked\", \"onChange\"];\nconst _hoisted_7 = {\n  class: \"buttons\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  key: 3\n};\nconst _hoisted_11 = {\n  key: 4\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_EditTask = _resolveComponent(\"EditTask\");\n  const _component_AddTask = _resolveComponent(\"AddTask\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$props.user ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"Привіт, \" + _toDisplayString($props.user.name) + \"! Ось твій список справ ✨\", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('logout'))\n  }, \"Вийти\"), _createElementVNode(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"search\"\n  }, \"Знайти задачу \", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"search\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.searchQuery = $event),\n    placeholder: \"Введіть назву або опис...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]])]), $data.error !== '' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[8] || (_cache[8] = _createElementVNode(\"nav\", null, [_createElementVNode(\"span\", {\n    class: \"allocated\"\n  }, \"Усі завдання |\"), _createElementVNode(\"span\", {\n    class: \"allocated\"\n  }, \"Виконані завдання |\"), _createElementVNode(\"span\", {\n    class: \"allocated\"\n  }, \"Не виконані завдання\")], -1 /* HOISTED */)), $options.filteredTasks.length > 0 ? (_openBlock(), _createElementBlock(\"section\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredTasks, task => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: task.id\n    }, [task.id !== $data.editbutton_id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", null, [_createElementVNode(\"h3\", {\n      class: _normalizeClass(task.completed ? 'completed' : '')\n    }, _toDisplayString(task.title), 3 /* TEXT, CLASS */), _createElementVNode(\"p\", null, _toDisplayString(task.description), 1 /* TEXT */), _createElementVNode(\"input\", {\n      type: \"checkbox\",\n      checked: task.completed,\n      onChange: $event => $options.completedTask(task, !task.completed)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_6), _createElementVNode(\"p\", {\n      class: _normalizeClass(task.date < $options.todayDate ? 'redDate' : '')\n    }, \"Дата виконання: \" + _toDisplayString(task.date), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deleteTask(task.id)\n    }, \"Видалити\", 8 /* PROPS */, _hoisted_8), _createElementVNode(\"button\", {\n      onClick: $event => $data.editbutton_id = task.id\n    }, \"Редагувати\", 8 /* PROPS */, _hoisted_9)])])) : _createCommentVNode(\"v-if\", true), task.id === $data.editbutton_id ? (_openBlock(), _createBlock(_component_EditTask, {\n      key: 1,\n      task: task,\n      onFetchTasks: $options.fetchTasks,\n      onEditbutton: _cache[2] || (_cache[2] = $event => $data.editbutton_id = $event),\n      onHandleAuthError: _cache[3] || (_cache[3] = $event => this.$emit('handleAuthError')),\n      onTodayDate: $options.todayDate\n    }, null, 8 /* PROPS */, [\"task\", \"onFetchTasks\", \"onTodayDate\"])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), $options.filteredTasks.length === 0 && $data.searchQuery != '' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, \"Завдання не знайдено\")) : _createCommentVNode(\"v-if\", true), $options.filteredTasks.length === 0 && $data.searchQuery === '' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_11, \"У вас ще немає задач. Додайте першу!\")) : _createCommentVNode(\"v-if\", true), !$data.addbutton ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 5,\n    onClick: _cache[4] || (_cache[4] = $event => $data.addbutton = !$data.addbutton)\n  }, \"Додати задачу\")) : _createCommentVNode(\"v-if\", true), $data.addbutton ? (_openBlock(), _createBlock(_component_AddTask, {\n    key: 6,\n    user_id: $props.user.id,\n    onFetchTasks: $options.fetchTasks,\n    onAddbutton: _cache[5] || (_cache[5] = $event => $data.addbutton = $event),\n    onHandleAuthError: _cache[6] || (_cache[6] = $event => this.$emit('handleAuthError')),\n    onTodayDate: $options.todayDate\n  }, null, 8 /* PROPS */, [\"user_id\", \"onFetchTasks\", \"onTodayDate\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","$props","user","_hoisted_2","_toDisplayString","name","_createElementVNode","onClick","_cache","$event","_ctx","$emit","for","type","id","$data","searchQuery","placeholder","error","_hoisted_3","$options","filteredTasks","length","_hoisted_4","_Fragment","_renderList","task","key","editbutton_id","_hoisted_5","_normalizeClass","completed","title","description","checked","onChange","completedTask","date","todayDate","_hoisted_7","deleteTask","_hoisted_8","_hoisted_9","_createBlock","_component_EditTask","onFetchTasks","fetchTasks","onEditbutton","onHandleAuthError","onTodayDate","_hoisted_10","_hoisted_11","addbutton","_component_AddTask","user_id","onAddbutton"],"sources":["/home/homesasha/Python_Fullstack/SashaTodoList/public/src/components/TaskComponent.vue"],"sourcesContent":["<template>\n    <div class=\"task-component\">\n        <p v-if=\"user\">Привіт, {{ user.name }}! Ось твій список справ ✨</p>\n        <button @click=\"$emit('logout')\">Вийти</button>\n        <div>\n            <label for=\"search\">Знайти задачу </label>\n            <input type=\"text\" id=\"search\" v-model=\"searchQuery\" placeholder=\"Введіть назву або опис...\" />\n        </div>\n        <p v-if=\"error !== ''\" class=\"error\">{{error}}</p>\n        <nav>\n            <span class=\"allocated\">Усі завдання |</span>\n            <span class=\"allocated\">Виконані завдання |</span>\n            <span class=\"allocated\">Не виконані завдання</span>\n        </nav>\n        <section v-if=\"filteredTasks.length > 0\">\n            <div v-for=\"task in filteredTasks\" :key=\"task.id\">\n                <div v-if=\"task.id !== editbutton_id\" class=\"task\">\n                    <div>\n                        <h3 :class=\"task.completed ? 'completed' : ''\">{{ task.title }}</h3>\n                        <p>{{ task.description }}</p>\n                        <input type=\"checkbox\" :checked=\"task.completed\" @change=\"completedTask(task, !task.completed)\" />\n                        <p :class=\"task.date < todayDate ? 'redDate' : ''\">Дата виконання: {{ task.date }}</p>\n                    </div>\n                    <div class=\"buttons\">\n                        <button @click=\"deleteTask(task.id)\">Видалити</button>\n                        <button @click=\"editbutton_id = task.id\">Редагувати</button>\n                    </div>\n                </div>\n                <EditTask v-if=\"task.id === editbutton_id\" :task=\"task\" @fetchTasks=\"fetchTasks\" @editbutton=\"editbutton_id = $event\" @handleAuthError=\"this.$emit('handleAuthError')\" @todayDate=\"todayDate\"/>\n            </div>\n        </section>\n        <p v-if=\"filteredTasks.length === 0 && searchQuery != ''\">Завдання не знайдено</p>\n        <p v-if=\"filteredTasks.length === 0 && searchQuery === ''\">У вас ще немає задач. Додайте першу!</p>\n        <button v-if=\"!addbutton\" @click=\"addbutton = !addbutton\">Додати задачу</button>\n        <AddTask v-if=\"addbutton\" :user_id=\"user.id\" @fetchTasks=\"fetchTasks\" @addbutton=\"addbutton = $event\" @handleAuthError=\"this.$emit('handleAuthError')\" @todayDate=\"todayDate\" />\n\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport AddTask from './AddTask.vue';\nimport EditTask from './EditTask.vue';\n\nexport default {\n    name: 'TaskComponent',\n    components: {\n        AddTask,\n        EditTask\n    },\n    props: {\n        user: Object\n    },\n    data() {\n        return {\n            tasks: [],\n            error: '',\n            addbutton: false,\n            editbutton_id: 0,\n            searchQuery: ''\n        }\n    },\n    computed: {\n        filteredTasks() {\n            if (!this.searchQuery) {\n                return this.tasks;\n            }\n            const lowerCaseQuery = this.searchQuery.toLowerCase();\n            return this.tasks.filter(task => \n                task.title.toLowerCase().includes(lowerCaseQuery) ||\n                task.description.toLowerCase().includes(lowerCaseQuery)\n            );\n        },\n        todayDate() {\n            const today = new Date();\n            const yyyy = today.getFullYear();\n            const mm = String(today.getMonth() + 1).padStart(2, '0');\n            const dd = String(today.getDate()).padStart(2, '0');\n            return `${yyyy}-${mm}-${dd}`;\n        }\n    },\n    methods: {\n        async fetchTasks() {\n            this.error = '';\n            try {\n                const response = await axios.get(`http://127.0.0.1:8000/tasks/${this.user.id}`);\n                this.tasks = response.data;\n            } catch (err) {\n                this.$emit('handleAuthError', err);\n            }\n        },\n        async deleteTask(id) {\n            try {\n                await axios.delete(`http://127.0.0.1:8000/tasks/${id}`);\n                this.fetchTasks();\n            } catch (err) {\n                this.$emit('handleAuthError', err);\n            }\n        },\n        async completedTask(task, completed) {\n            try {\n                await axios.put(`http://127.0.0.1:8000/tasks/${task.id}/`, {\n                    title: task.title,\n                    description: task.description,\n                    completed: completed,\n                    date: task.date,\n                    user_id: task.user_id\n                });\n                this.fetchTasks();\n            } catch (err) {\n                this.$emit('handleAuthError', err);\n            }\n        }\n    },\n    watch: {\n        user: {\n            handler(newUser) {\n                if (newUser && newUser.id) {\n                    this.fetchTasks();\n                } else {\n                    this.tasks = [];\n                    this.error = '';\n                }\n            },\n            immediate: true\n        }\n    }\n}\n</script>\n\n<style scoped>\n.task-component{\n    color: #fff;\n    padding: 30px 10px;\n    border-radius: 10px;\n    margin: auto;\n    width: clamp(100px, 80%, 700px);\n    text-align: center;\n}\n.error{\n    background-color: #d03939;\n    color: white;\n    padding: 5px 10px;\n    border-radius: 3px;\n}\n.error::before{\n    content: \"! \";\n}\np{\n    color:#fff;\n    margin: 10px 0;\n    cursor: pointer;\n}\nbutton{\n    background-color: #e3904d;\n    color:#fcfcfc;\n    border-radius: 10px;\n    border:2px solid #b95a35;\n    padding: 10px 20px;\n    margin: 10px 5px;\n    cursor:pointer;\n    transition: transform 500ms ease;\n}\nbutton:hover{\n    transform: scale(1.1) translateY(-1px);\n}\ninput{\n    margin-top: 10px;\n    color:#fff;\n    background-color: transparent;\n    border: 0;\n    border-bottom:2px solid #110813 ;\n    font-size: 14px;\n    padding: 5px 8px;\n    outline: none;\n}\ninput:focus{\n    border-bottom-color:#6e2d7d;\n}\ninput:-webkit-autofill {\n    -webkit-box-shadow: 0 0 0 30px transparent inset !important;\n    -webkit-text-fill-color: #fff !important; \n}\ninput::placeholder{\n    color:#eeeeee;\n}\nsection > div{\n    background-color: #111;\n    border-radius: 10px;\n    margin:10px 0;\n    padding: 10px;\n}\nsection div input[type=\"checkbox\"]{\n    accent-color: #6e2d7d;\n}\n.completed{\n    text-decoration: line-through;\n}\n.task{\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    flex-wrap: wrap;\n    text-align: left;\n}\n.task > div{\n    width: 50%;\n}\n.buttons{\n    text-align: right;\n}\n\n@media screen and (max-width: 768px) {\n    .task > div{\n        width: 100%;\n    }\n}\n.redDate{\n    color: rgb(255, 77, 77);\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}