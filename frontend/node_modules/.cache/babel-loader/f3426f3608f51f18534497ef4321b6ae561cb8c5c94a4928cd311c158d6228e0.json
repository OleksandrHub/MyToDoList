{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport axios from 'axios';\nimport AddTask from './AddTask.vue';\nimport EditTask from './EditTask.vue';\nexport default {\n  name: 'TaskComponent',\n  components: {\n    AddTask,\n    EditTask\n  },\n  props: {\n    user: Object\n  },\n  data() {\n    return {\n      tasks: [],\n      error: '',\n      addbutton: false,\n      editbutton_id: 0,\n      searchQuery: ''\n    };\n  },\n  computed: {\n    filteredTasks() {\n      if (!this.searchQuery) {\n        return this.tasks;\n      }\n      const lowerCaseQuery = this.searchQuery.toLowerCase();\n      return this.tasks.filter(task => task.title.toLowerCase().includes(lowerCaseQuery) || task.description.toLowerCase().includes(lowerCaseQuery));\n    },\n    todayDate() {\n      const today = new Date();\n      const yyyy = today.getFullYear();\n      const mm = String(today.getMonth() + 1).padStart(2, '0');\n      const dd = String(today.getDate()).padStart(2, '0');\n      return `${yyyy}-${mm}-${dd}`;\n    }\n  },\n  methods: {\n    async fetchTasks() {\n      this.error = '';\n      try {\n        const response = await axios.get(`http://127.0.0.1:8000/tasks/${this.user.id}`);\n        this.tasks = response.data;\n      } catch (err) {\n        this.$emit('handleAuthError', err);\n      }\n    },\n    async deleteTask(id) {\n      try {\n        await axios.delete(`http://127.0.0.1:8000/tasks/${id}`);\n        this.fetchTasks();\n      } catch (err) {\n        this.$emit('handleAuthError', err);\n      }\n    },\n    async completedTask(task, completed) {\n      try {\n        await axios.put(`http://127.0.0.1:8000/tasks/${task.id}/`, {\n          title: task.title,\n          description: task.description,\n          completed: completed,\n          date: task.date,\n          user_id: task.user_id\n        });\n        this.fetchTasks();\n      } catch (err) {\n        this.$emit('handleAuthError', err);\n      }\n    }\n  },\n  watch: {\n    user: {\n      handler(newUser) {\n        if (newUser && newUser.id) {\n          this.fetchTasks();\n        } else {\n          this.tasks = [];\n          this.error = '';\n        }\n      },\n      immediate: true\n    }\n  }\n};","map":{"version":3,"names":["axios","AddTask","EditTask","name","components","props","user","Object","data","tasks","error","addbutton","editbutton_id","searchQuery","computed","filteredTasks","lowerCaseQuery","toLowerCase","filter","task","title","includes","description","todayDate","today","Date","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getDate","methods","fetchTasks","response","get","id","err","$emit","deleteTask","delete","completedTask","completed","put","date","user_id","watch","handler","newUser","immediate"],"sources":["/home/homesasha/Python_Fullstack/SashaTodoList/public/src/components/TaskComponent.vue"],"sourcesContent":["<template>\n    <div class=\"task-component\">\n        <p v-if=\"user\">Привіт, {{ user.name }}! Ось твій список справ ✨</p>\n        <button @click=\"$emit('logout')\">Вийти</button>\n        <div>\n            <label for=\"search\">Знайти задачу </label>\n            <input type=\"text\" id=\"search\" v-model=\"searchQuery\" placeholder=\"Введіть назву або опис...\" />\n        </div>\n        <p v-if=\"error !== ''\" class=\"error\">{{error}}</p>\n        <nav>\n            <span class=\"allocated\">Усі завдання |</span>\n            <span class=\"allocated\">Виконані завдання |</span>\n            <span class=\"allocated\">Не виконані завдання</span>\n        </nav>\n        <section v-if=\"filteredTasks.length > 0\">\n            <div v-for=\"task in filteredTasks\" :key=\"task.id\">\n                <div v-if=\"task.id !== editbutton_id\" class=\"task\">\n                    <div>\n                        <h3 :class=\"task.completed ? 'completed' : ''\">{{ task.title }}</h3>\n                        <p>{{ task.description }}</p>\n                        <input type=\"checkbox\" :checked=\"task.completed\" @change=\"completedTask(task, !task.completed)\" />\n                        <p :class=\"task.date < todayDate ? 'redDate' : ''\">Дата виконання: {{ task.date }}</p>\n                    </div>\n                    <div class=\"buttons\">\n                        <button @click=\"deleteTask(task.id)\">Видалити</button>\n                        <button @click=\"editbutton_id = task.id\">Редагувати</button>\n                    </div>\n                </div>\n                <EditTask v-if=\"task.id === editbutton_id\" :task=\"task\" @fetchTasks=\"fetchTasks\" @editbutton=\"editbutton_id = $event\" @handleAuthError=\"this.$emit('handleAuthError')\" @todayDate=\"todayDate\"/>\n            </div>\n        </section>\n        <p v-if=\"filteredTasks.length === 0 && searchQuery != ''\">Завдання не знайдено</p>\n        <p v-if=\"filteredTasks.length === 0 && searchQuery === ''\">У вас ще немає задач. Додайте першу!</p>\n        <button v-if=\"!addbutton\" @click=\"addbutton = !addbutton\">Додати задачу</button>\n        <AddTask v-if=\"addbutton\" :user_id=\"user.id\" @fetchTasks=\"fetchTasks\" @addbutton=\"addbutton = $event\" @handleAuthError=\"this.$emit('handleAuthError')\" @todayDate=\"todayDate\" />\n\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport AddTask from './AddTask.vue';\nimport EditTask from './EditTask.vue';\n\nexport default {\n    name: 'TaskComponent',\n    components: {\n        AddTask,\n        EditTask\n    },\n    props: {\n        user: Object\n    },\n    data() {\n        return {\n            tasks: [],\n            error: '',\n            addbutton: false,\n            editbutton_id: 0,\n            searchQuery: ''\n        }\n    },\n    computed: {\n        filteredTasks() {\n            if (!this.searchQuery) {\n                return this.tasks;\n            }\n            const lowerCaseQuery = this.searchQuery.toLowerCase();\n            return this.tasks.filter(task => \n                task.title.toLowerCase().includes(lowerCaseQuery) ||\n                task.description.toLowerCase().includes(lowerCaseQuery)\n            );\n        },\n        todayDate() {\n            const today = new Date();\n            const yyyy = today.getFullYear();\n            const mm = String(today.getMonth() + 1).padStart(2, '0');\n            const dd = String(today.getDate()).padStart(2, '0');\n            return `${yyyy}-${mm}-${dd}`;\n        }\n    },\n    methods: {\n        async fetchTasks() {\n            this.error = '';\n            try {\n                const response = await axios.get(`http://127.0.0.1:8000/tasks/${this.user.id}`);\n                this.tasks = response.data;\n            } catch (err) {\n                this.$emit('handleAuthError', err);\n            }\n        },\n        async deleteTask(id) {\n            try {\n                await axios.delete(`http://127.0.0.1:8000/tasks/${id}`);\n                this.fetchTasks();\n            } catch (err) {\n                this.$emit('handleAuthError', err);\n            }\n        },\n        async completedTask(task, completed) {\n            try {\n                await axios.put(`http://127.0.0.1:8000/tasks/${task.id}/`, {\n                    title: task.title,\n                    description: task.description,\n                    completed: completed,\n                    date: task.date,\n                    user_id: task.user_id\n                });\n                this.fetchTasks();\n            } catch (err) {\n                this.$emit('handleAuthError', err);\n            }\n        }\n    },\n    watch: {\n        user: {\n            handler(newUser) {\n                if (newUser && newUser.id) {\n                    this.fetchTasks();\n                } else {\n                    this.tasks = [];\n                    this.error = '';\n                }\n            },\n            immediate: true\n        }\n    }\n}\n</script>\n\n<style scoped>\n.task-component{\n    color: #fff;\n    padding: 30px 10px;\n    border-radius: 10px;\n    margin: auto;\n    width: clamp(100px, 80%, 700px);\n    text-align: center;\n}\n.error{\n    background-color: #d03939;\n    color: white;\n    padding: 5px 10px;\n    border-radius: 3px;\n}\n.error::before{\n    content: \"! \";\n}\np{\n    color:#fff;\n    margin: 10px 0;\n    cursor: pointer;\n}\nbutton{\n    background-color: #e3904d;\n    color:#fcfcfc;\n    border-radius: 10px;\n    border:2px solid #b95a35;\n    padding: 10px 20px;\n    margin: 10px 5px;\n    cursor:pointer;\n    transition: transform 500ms ease;\n}\nbutton:hover{\n    transform: scale(1.1) translateY(-1px);\n}\ninput{\n    margin-top: 10px;\n    color:#fff;\n    background-color: transparent;\n    border: 0;\n    border-bottom:2px solid #110813 ;\n    font-size: 14px;\n    padding: 5px 8px;\n    outline: none;\n}\ninput:focus{\n    border-bottom-color:#6e2d7d;\n}\ninput:-webkit-autofill {\n    -webkit-box-shadow: 0 0 0 30px transparent inset !important;\n    -webkit-text-fill-color: #fff !important; \n}\ninput::placeholder{\n    color:#eeeeee;\n}\nsection > div{\n    background-color: #111;\n    border-radius: 10px;\n    margin:10px 0;\n    padding: 10px;\n}\nsection div input[type=\"checkbox\"]{\n    accent-color: #6e2d7d;\n}\n.completed{\n    text-decoration: line-through;\n}\n.task{\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    flex-wrap: wrap;\n    text-align: left;\n}\n.task > div{\n    width: 50%;\n}\n.buttons{\n    text-align: right;\n}\n.redDate{\n    color: rgb(255, 77, 77);\n}\nnav{\n    margin:20px 0;\n}\n.allocated:hover{\n    color: #a7a7a7;\n    cursor: pointer;\n    text-decoration: underline;\n}\n\n@media screen and (max-width: 768px) {\n    .task > div{\n        width: 100%;\n    }\n}\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}