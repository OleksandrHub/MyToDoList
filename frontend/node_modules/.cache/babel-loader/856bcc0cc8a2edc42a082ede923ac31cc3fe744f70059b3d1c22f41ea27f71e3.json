{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_3 = {\n  key: 2\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = [\"checked\", \"onChange\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  key: 3\n};\nconst _hoisted_9 = {\n  key: 4\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_EditTask = _resolveComponent(\"EditTask\");\n  const _component_AddTask = _resolveComponent(\"AddTask\");\n  return _openBlock(), _createElementBlock(\"div\", null, [$props.user ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, \"Привіт, \" + _toDisplayString($props.user.name) + \"! Ось твій список справ ✨\", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('logout'))\n  }, \"Вийти\"), _createElementVNode(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"search\"\n  }, \"Знайти задачу...\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"search\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.searchQuery = $event),\n    placeholder: \"Введіть назву або опис...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]])]), $data.error !== '' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $options.filteredTasks.length > 0 ? (_openBlock(), _createElementBlock(\"section\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredTasks, task => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: task.id\n    }, [task.id !== $data.editbutton_id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h3\", null, _toDisplayString(task.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(task.description), 1 /* TEXT */), _createElementVNode(\"input\", {\n      type: \"checkbox\",\n      checked: task.completed,\n      onChange: $event => $options.completedTask(task, !task.completed)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5), _createElementVNode(\"p\", null, \"Дата виконання: \" + _toDisplayString(task.date), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteTask(task.id)\n    }, \"Видалити\", 8 /* PROPS */, _hoisted_6), _createElementVNode(\"button\", {\n      onClick: $event => $data.editbutton_id = task.id\n    }, \"Редагувати\", 8 /* PROPS */, _hoisted_7)])) : _createCommentVNode(\"v-if\", true), task.id === $data.editbutton_id ? (_openBlock(), _createBlock(_component_EditTask, {\n      key: 1,\n      task: task,\n      onFetchTasks: $options.fetchTasks,\n      onEditbutton: _cache[2] || (_cache[2] = $event => $data.editbutton_id = $event)\n    }, null, 8 /* PROPS */, [\"task\", \"onFetchTasks\"])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), $options.filteredTasks.length === 0 && $data.searchQuery != '' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \"Завдання не знайдено\")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \"У вас ще немає задач. Додайте першу!\")), !$data.addbutton ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 5,\n    onClick: _cache[3] || (_cache[3] = $event => $data.addbutton = !$data.addbutton)\n  }, \"Додати задачу\")) : _createCommentVNode(\"v-if\", true), $data.addbutton ? (_openBlock(), _createBlock(_component_AddTask, {\n    key: 6,\n    user_id: $props.user.id,\n    onFetchTasks: $options.fetchTasks,\n    onAddbutton: _cache[4] || (_cache[4] = $event => $data.addbutton = $event)\n  }, null, 8 /* PROPS */, [\"user_id\", \"onFetchTasks\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","$props","user","_hoisted_1","_toDisplayString","name","_createElementVNode","onClick","_cache","$event","_ctx","$emit","for","type","id","$data","searchQuery","placeholder","error","_hoisted_2","$options","filteredTasks","length","_hoisted_3","_Fragment","_renderList","task","key","editbutton_id","_hoisted_4","title","description","checked","completed","onChange","completedTask","date","deleteTask","_hoisted_6","_hoisted_7","_createBlock","_component_EditTask","onFetchTasks","fetchTasks","onEditbutton","_hoisted_8","_hoisted_9","addbutton","_component_AddTask","user_id","onAddbutton"],"sources":["/home/homesasha/Python_Fullstack/SashaTodoList/public/src/components/TaskComponent.vue"],"sourcesContent":["<template>\n    <div>\n        <p v-if=\"user\">Привіт, {{ user.name }}! Ось твій список справ ✨</p>\n        <button @click=\"$emit('logout')\">Вийти</button>\n        <div>\n            <label for=\"search\">Знайти задачу...</label>\n            <input type=\"text\" id=\"search\" v-model=\"searchQuery\" placeholder=\"Введіть назву або опис...\" />\n        </div>\n        <p v-if=\"error !== ''\" class=\"error\">{{error}}</p>\n        <section v-if=\"filteredTasks.length > 0\">\n            <div v-for=\"task in filteredTasks\" :key=\"task.id\">\n                <div v-if=\"task.id !== editbutton_id\">\n                    <h3>{{ task.title }}</h3>\n                    <p>{{ task.description }}</p>\n                    <input type=\"checkbox\" :checked=\"task.completed\" @change=\"completedTask(task, !task.completed)\" />\n                    <p>Дата виконання: {{ task.date }}</p>\n                    <button @click=\"deleteTask(task.id)\">Видалити</button>\n                    <button @click=\"editbutton_id = task.id\">Редагувати</button>\n                </div>\n                <EditTask v-if=\"task.id === editbutton_id\" :task=\"task\" @fetchTasks=\"fetchTasks\" @editbutton=\"editbutton_id = $event\" />\n            </div>\n        </section>\n        <p v-if=\"filteredTasks.length === 0 && searchQuery != ''\">Завдання не знайдено</p>\n        <p v-else>У вас ще немає задач. Додайте першу!</p>\n        <button v-if=\"!addbutton\" @click=\"addbutton = !addbutton\">Додати задачу</button>\n        <AddTask v-if=\"addbutton\" :user_id=\"user.id\" @fetchTasks=\"fetchTasks\" @addbutton=\"addbutton = $event\" />\n\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport AddTask from './AddTask.vue';\nimport EditTask from './EditTask.vue';\n\nexport default {\n    name: 'TaskComponent',\n    components: {\n        AddTask,\n        EditTask\n    },\n    props: {\n        user: Object\n    },\n    data() {\n        return {\n            tasks: [],\n            error: '',\n            addbutton: false,\n            editbutton_id: 0,\n            searchQuery: ''\n        }\n    },\n    computed: {\n        filteredTasks() {\n            if (!this.searchQuery) {\n                return this.tasks;\n            }\n            const lowerCaseQuery = this.searchQuery.toLowerCase();\n            return this.tasks.filter(task => \n                task.title.toLowerCase().includes(lowerCaseQuery) ||\n                task.description.toLowerCase().includes(lowerCaseQuery)\n            );\n        }\n    },\n    methods: {\n        async fetchTasks() {\n            this.error = '';\n            try {\n                const response = await axios.get(`http://127.0.0.1:8000/tasks/${this.user.id}`);\n                this.tasks = response.data;\n            } catch (err) {\n                if (err.request) {\n                    this.error = 'Не вдалося підключитися до сервера. Перевірте ваше інтернет-з\\'єднання.';\n                } else {\n                    this.error = 'Сталася помилка під час відправки запиту.';\n                }\n            }\n        },\n        async deleteTask(id) {\n            try {\n                await axios.delete(`http://127.0.0.1:8000/tasks/${id}`);\n                this.fetchTasks();\n            } catch (err) {\n                if (err.request){\n                    this.error = 'Не вдалося підключитися до сервера. Перевірте ваше інтернет-з\\'єднання.';\n                } else {\n                    this.error = 'Сталася помилка під час відправки запиту.';\n                }\n            }\n        },\n        async completedTask(task, completed) {\n            try {\n                await axios.put(`http://127.0.0.1:8000/tasks/${task.id}/`, {\n                    title: task.title,\n                    description: task.description,\n                    completed: completed,\n                    date: task.date,\n                    user_id: task.user_id\n                });\n                this.fetchTasks();\n            } catch (err) {\n                if (err.request) {\n                    this.error = 'Не вдалося підключитися до сервера. Перевірте ваше інтернет-з\\'єднання.';\n                } else {\n                    this.error = 'Сталася помилка під час відправки запиту.';\n                }\n            }\n        }\n    },\n    watch: {\n        user: {\n            handler(newUser) {\n                if (newUser && newUser.id) {\n                    this.fetchTasks();\n                } else {\n                    this.tasks = [];\n                    this.error = '';\n                }\n            },\n            immediate: true\n        }\n    }\n}\n</script>\n\n<style scoped>\n.error{\n    text-align: center;\n    background-color: #d03939;\n    color: white;\n    padding: 5px 10px;\n    border-radius: 3px;\n}\n.error::before{\n    content: \"! \";\n}\np{\n    color:#fff;\n    margin-top: 20px;\n    text-align: center;\n    cursor: pointer;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}