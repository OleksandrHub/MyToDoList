{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'TaskComponent',\n  props: {\n    user: Object\n  },\n  data() {\n    return {\n      tasks: [],\n      error: ''\n    };\n  },\n  methods: {\n    async fetchTasks() {\n      this.error = '';\n      try {\n        const response = await axios.get(`http://127.0.0.1:8000/tasks/${this.user.id}`);\n        this.tasks = response.data;\n      } catch (err) {\n        if (err.request) {\n          this.error = 'Не вдалося підключитися до сервера. Перевірте ваше інтернет-з\\'єднання.';\n        } else {\n          this.error = 'Сталася помилка під час відправки запиту.';\n        }\n      }\n    }\n  },\n  watch: {\n    user: {\n      handler(newUser) {\n        if (newUser && newUser.id) {\n          this.fetchTasks();\n        } else {\n          this.tasks = [];\n          this.error = '';\n        }\n      },\n      immediate: true\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","user","Object","data","tasks","error","methods","fetchTasks","response","get","id","err","request","watch","handler","newUser","immediate"],"sources":["/home/homesasha/Python_Fullstack/SashaTodoList/public/src/components/TaskComponent.vue"],"sourcesContent":["<template>\n    <div>\n        <p>Привіт, {{ user.name }}! Ось твій список справ ✨</p>\n        <button @click=\"$emit('logout')\">Вийти</button>\n        <div>\n            <label for=\"search\">Знайти задачу...</label>\n            <input type=\"text\" id=\"search\" />\n        </div>\n        <section v-if=\"tasks.length > 0\">\n            <div v-for=\"task in tasks\" :key=\"task.id\">\n                <h3>{{ task.title }}</h3>\n                <p>{{ task.description }}</p>\n                <input type=\"checkbox\" :checked=\"task.completed\" />\n                <p>Дата виконання: {{ task.date }}</p>\n                <button>Видалити</button>\n                <button>Редагувати</button>\n            </div>\n        </section>\n        <p v-else>У вас ще немає задач. Додайте першу!</p>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    name: 'TaskComponent',\n    props: {\n        user: Object\n    },\n    data() {\n        return {\n            tasks: [],\n            error: ''\n        }\n    },\n    methods: {\n        async fetchTasks() {\n            this.error = '';\n            try {\n                const response = await axios.get(`http://127.0.0.1:8000/tasks/${this.user.id}`);\n                this.tasks = response.data;\n            } catch (err) {\n                if (err.request) {\n                    this.error = 'Не вдалося підключитися до сервера. Перевірте ваше інтернет-з\\'єднання.';\n                } else {\n                    this.error = 'Сталася помилка під час відправки запиту.';\n                }\n            }\n        }\n    },\n    watch: {\n        user: {\n            handler(newUser) {\n                if (newUser && newUser.id) {\n                    this.fetchTasks();\n                } else {\n                    this.tasks = [];\n                    this.error = '';\n                }\n            },\n            immediate: true\n        }\n    }\n}\n</script>\n\n<style scoped></style>"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACHC,IAAI,EAAEC;EACV,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;IACX;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,UAAUA,CAAA,EAAG;MACf,IAAI,CAACF,KAAI,GAAI,EAAE;MACf,IAAI;QACA,MAAMG,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,+BAA+B,IAAI,CAACR,IAAI,CAACS,EAAE,EAAE,CAAC;QAC/E,IAAI,CAACN,KAAI,GAAII,QAAQ,CAACL,IAAI;MAC9B,EAAE,OAAOQ,GAAG,EAAE;QACV,IAAIA,GAAG,CAACC,OAAO,EAAE;UACb,IAAI,CAACP,KAAI,GAAI,yEAAyE;QAC1F,OAAO;UACH,IAAI,CAACA,KAAI,GAAI,2CAA2C;QAC5D;MACJ;IACJ;EACJ,CAAC;EACDQ,KAAK,EAAE;IACHZ,IAAI,EAAE;MACFa,OAAOA,CAACC,OAAO,EAAE;QACb,IAAIA,OAAM,IAAKA,OAAO,CAACL,EAAE,EAAE;UACvB,IAAI,CAACH,UAAU,CAAC,CAAC;QACrB,OAAO;UACH,IAAI,CAACH,KAAI,GAAI,EAAE;UACf,IAAI,CAACC,KAAI,GAAI,EAAE;QACnB;MACJ,CAAC;MACDW,SAAS,EAAE;IACf;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}